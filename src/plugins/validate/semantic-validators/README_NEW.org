* Semantic Validators

Ie: anything not covered by the json-schema

** Make a new one
#+BEGIN_SRC javascript
  export const validate_OnlyFoos = () => (system) => {
    system.validateSelectors.allNodes().forEach(node => {
      if(node.key === "foo") {
        system.errActions.newErr({
          level: "error",
          line: "fuck",
          message: "We can do something with this.",
          path: node.path
        })
      }
    }))
  }
#+END_SRC
*** How do we optimize this? So that we do /less/ traversals?
**** We can call a function /with/ the selectors.
Instead of calling the selectors directly. This allows us to batch the same selectors together.
**** Selectors could be memoized per validation ( or even across validation runs )
*** They are actions with the simple convention of *validate_<SomeName>*
*** They rely on nodeSelectors, being passed in.
Which are like normal selectors, except they always return *nodes*
